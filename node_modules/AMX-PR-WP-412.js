/* TO DO 
1) Refactor onChange to match .watch function - IE dvPrecis.output[0].watch(function(){blah});
2) Do the same for the signal inputs - dvPrecis.input[0].watch(function(){blah});
3) add parsing in for signal present
*/



function PRECIS_WP_412(){}

PRECIS_WP_412.dv;
PRECIS_WP_412.output = [
    {video:0,audio:0,mode:false}
];
PRECIS_WP_412.input = [
    {signal:false},
    {signal:false},
    {signal:false},
    {signal:false}
];
PRECIS_WP_412.raw = "";


PRECIS_WP_412.init = function(deviceName){
    log.info("<!== INIT INSTANCE -" + deviceName + " ==!>");
    PRECIS_WP_412.dv = context.devices.get(deviceName);
    PRECIS_WP_412.dv.online(function(event){
        log.info("<!== PRECIS ONLINE ==!>");
        
        PRECIS_WP_412.dv.response.listen(function(event){
            PRECIS_WP_412.parse(String(event.arguments.data));
        });

        PRECIS_WP_412.dv.offline(function(event){
            log.info("<!== PRECIS OFFLINE ==!>");
        });

        //Get Status?
        PRECIS_WP_412.get("vidout");
        PRECIS_WP_412.get("audout");
        PRECIS_WP_412.get("signalPresence");
    })
}

PRECIS_WP_412.switch = function(input = 0,output = 1,type = "combined"){
    let cmd = "set switch ";
    let method = "ci";
    switch(type){
        case("video"):{method = "vi"; break}
        case("audio"):{method = "ai"; break}
        case("combined"):{method = "ci"; break}
    }
    cmd = cmd + method + input + "o" + output + "\r\n";
    //log.info("OUT = " + cmd); 
    PRECIS_WP_412.dv.send(cmd);
}
PRECIS_WP_412.preset = function(pre){
    PRECIS_WP_412.dv.send("load preset " + pre + '\r\n');
}
PRECIS_WP_412.mode = function(mode = "matrix"){
    PRECIS_WP_412.dv.send("set video mode:" + mode + "\r\n");
}
PRECIS_WP_412.send = function(str){
    PRECIS_WP_412.dv.send(str + '\r\n');
}
PRECIS_WP_412.get = function(thing){
    let cmd = "";
    switch(thing){
        case("vidout"):{cmd = "get switch vo1\r\n"; break}
        case("audout"):{cmd = "get switch ao1\r\n"; break}
        case("vidmode"):{cmd = "get video mode\r\n"; break}
        case("signalPresence"):{cmd = "get vidin res 1\r\nget vidin res 2\r\nget vidin res 3\r\nget vidin res 4\r\n"; break}
    }
    PRECIS_WP_412.dv.send(cmd);
}
PRECIS_WP_412.parse = function(incoming){
    
    sp = new RegExp("get (.*) video input ([0-9]+)");
    
    PRECIS_WP_412.raw = incoming.split('\r\n');
    PRECIS_WP_412.raw.forEach(function(e){
        if (sp.test(e)){
            let s = (e.search('no video') == -1);
            let i = parseInt(e.split(' ')[4]);
            //log.info("State:" + s + " Input:" + i);
            PRECIS_WP_412.input[(i - 1)].signal = s;
        } else {
            e = e.replace(">","");
            e = e.split(" ");
            if (e[0] == "set" || e[0] == "get"){
                //log.info(JSON.stringify(e));
                switch(e[1]){
                    case("switch"):{
                        //log.info(JSON.stringify(e));
                        if (e[3] !== undefined && e[3]!== "and"){
                            let out = parseInt(e[8]);
                            let inp = parseInt(e[5]);
                            let type = e[2];
                            //log.info("out = " + out + ", inp = " + inp + ", type = " + type);
                            PRECIS_WP_412.output[(out -1)][type] = inp;    
                        }
                        break;
                    }
                    case("matrix"):{
                        log.info("mode matrix?");
                        break;
                    }
                    case("quad"):{
                        log.info("quad mode?");
                        break;
                    }   
                } 
            }
        }
            
    });
    if (PRECIS_WP_412.onChange !== undefined) {PRECIS_WP_412.onChange()}  
}




module.exports = PRECIS_WP_412;